{"version":3,"sources":["api/openWeather.js","hooks/useOpenWeather.js","components/SearchBar.js","components/SkeletonCard.js","components/LocationDetali.js","components/PreviousSearches.js","components/WeatherData.js","img/balloon.jpeg","components/App.js","index.js"],"names":["axios","create","baseURL","params","appid","units","useOpenWeather","defaultLocation","path","useState","weather","setWeather","useEffect","search","term","a","openWeather","get","q","response","data","SearchBar","onFormSubmit","previousSearch","location","setLocation","className","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","SkeletonCard","LocationDetail","locationData","currentDay","weekDay","Date","dt","toLocaleString","weekday","date","months","myarr1","split","myArr2","year","month","Number","d","dateList","dt_txt","Grid","padded","style","height","Row","Column","computer","mobile","width","marginTop","Math","round","main","temp","name","country","src","icon","alt","PreviousSearches","onLocationClick","searchList","console","log","renderedList","map","searchTerm","onClick","WeatherData","class","clouds","all","humidity","wind","speed","rain","App","previousSearches","addSearch","backgroundImage","balloon","overflowY","position","city","list","length","newArray","pop","charAt","toUpperCase","slice","ReactDOM","render","document","querySelector"],"mappings":"6LAIeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0CACTC,OAAQ,CACNC,MALQ,mCAMRC,MAAO,YCeIC,EApBQ,SAACC,GAAsC,IAArBC,EAAoB,uDAAb,SAC5C,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,EAAON,KACN,CAACA,IAEJ,IAAMM,EAAM,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACUC,EAAYC,IAAIT,EAAM,CAC3CL,OAAQ,CACNe,EAAGJ,KAHM,OACPK,EADO,OAObR,EAAWQ,EAASC,MAPP,2CAAH,sDAUZ,MAAO,CAACV,EAASG,I,OCaNQ,EA/BG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACjC,EAAgCd,mBAAS,IAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KAUA,OACE,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAMC,SAZG,SAACC,GAChBA,EAAMC,iBAENP,EAAaE,GACbD,EAAeC,GACfC,EAAY,KAON,SACE,qBAAKC,UAAU,QAAf,SACE,uBACEI,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACJ,GAAD,OAAWH,EAAYG,EAAMK,OAAOF,QAC9CG,YAAY,gCCFbC,EAnBM,WACjB,OACI,sBAAKT,UAAU,iBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,oCACf,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,2BACb,mBAAGA,UAAU,2BACb,mBAAGA,UAAU,iCAGrB,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,+BCgDhBU,EAzDQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACpC,GAAID,EAAc,CACd,IAAME,EAAU,IAAIC,KAAqB,IAAhBF,EAAWG,IAAWC,eAAe,QAAS,CACnEC,QAAS,SAETC,EAuCR,SAAkBA,GACd,IAAIC,EAAW,CAAC,GAAI,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAChGC,EAASF,EAAKG,MAAM,KAEpBC,GADJJ,EAAOE,EAAO,IACIC,MAAM,KACpBE,EAAOD,EAAO,GACdE,EAAQL,EAAOM,OAAOH,EAAO,KAC7BI,EAAIJ,EAAO,GACf,OAAOI,EAAI,IAAMF,EAAQ,IAAMD,EA/CpBI,CAASf,EAAWgB,QAE/B,OACI,cAACC,EAAA,EAAD,CAAMC,QAAM,EAACC,MAAO,CAACC,OAAQ,QAA7B,SACI,eAACH,EAAA,EAAKI,IAAN,CAAUF,MAAO,CAACC,OAAQ,QAA1B,UACI,cAACH,EAAA,EAAKK,OAAN,CAAaC,SAAU,EAAGC,OAAQ,GAAIC,MAAO,EAAGN,MAAO,CAACO,UAAW,MAAnE,SACI,qBAAItC,UAAU,OAAd,UAAsBuC,KAAKC,MAAMf,OAAOb,EAAW6B,KAAKC,OAAxD,aAEJ,eAACb,EAAA,EAAKK,OAAN,CAAaC,SAAU,EAAGC,OAAQ,GAAIC,MAAO,EAAGN,MAAO,CAACO,UAAW,MAAnE,UACI,qBAAKtC,UAAU,WAAf,SAA0B,8BAAIW,EAAagC,KAAjB,KAAyBhC,EAAaiC,aAChE,sBAAK5C,UAAU,SAAf,UAAyBa,EAAzB,KAAoCK,QAExC,eAACW,EAAA,EAAKK,OAAN,CAAaC,SAAU,EAAGC,OAAQ,GAAIC,MAAO,EAA7C,UACI,qBAAKQ,IAAG,2CAAsCjC,EAAW5B,QAAQ,GAAG8D,KAA5D,WAA2EC,IAAK,WACxF,4BAAInC,EAAW5B,QAAQ,GAAGyD,eAsB1C,OAAO,cAAC,EAAD,KCpBAO,EAvBU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,WACzCC,QAAQC,IAAIF,GACZ,IAAMG,EAAeH,EAAWI,KAAI,SAAAC,GAChC,OACI,oBAAIvD,UAAU,uBAEVwD,QAAS,kBAAMP,EAAgBM,IAFnC,UAGSA,EACD,yBAHCA,MAOjB,OACI,qBAAKvD,UAAU,kBAAf,SACI,qBAAKA,UAAU,iCAAf,SACKqD,OCIFI,EAlBK,SAAC,GAAY,IAAX/D,EAAU,EAAVA,KAClB,OAAIA,EAEI,qBAAKM,UAAU,kBAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,8BAAf,6BACA,sBAAK0D,MAAM,eAAX,UAA0B,mBAAG1D,UAAU,eAAb,qBAA1B,IAAkE,oBAAGA,UAAU,gBAAb,UAA8BN,EAAKiE,OAAOC,IAA1C,UAClE,sBAAKF,MAAM,eAAX,UAA0B,mBAAG1D,UAAU,eAAb,uBAA1B,IAAoE,oBAAGA,UAAU,gBAAb,UAA8BN,EAAK+C,KAAKoB,SAAxC,UACpE,sBAAKH,MAAM,eAAX,UAA0B,mBAAG1D,UAAU,eAAb,mBAA1B,IAAgE,oBAAGA,UAAU,gBAAb,UAA+BuC,KAAKC,MAAyB,IAAlB9C,EAAKoE,KAAKC,MAAe,IAAO,GAA3E,aAChE,sBAAKL,MAAM,eAAX,UAA0B,mBAAG1D,UAAU,eAAb,mBAA1B,IAAgE,oBAAGA,UAAU,gBAAb,UAA8BN,EAAKsE,KAAOtE,EAAKsE,KAAK,MAAQ,EAA5D,gBAKrE,cAAC,EAAD,KClBA,MAA0B,qCC6D1BC,EAlDH,WACR,MAA0BrF,EAAe,SAAU,aAAnD,mBAAOI,EAAP,KAAgBG,EAAhB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOmF,EAAP,KAAyBC,EAAzB,KAWA,OACI,qBAAKnE,UAAU,aAAa+B,MAAO,CAACqC,gBAAiB,QAAUC,EAAU,MAAzE,SACI,eAACxC,EAAA,EAAD,CAAMC,QAAM,EAACC,MAAO,CAACC,OAAQ,QAASsC,UAAW,UAAjD,UACI,eAACzC,EAAA,EAAKI,IAAN,CAAUF,MAAO,CAACC,OAAQ,OAAQsC,UAAW,UAA7C,UACI,cAACzC,EAAA,EAAKK,OAAN,CAAaE,OAAQ,GAAID,SAAU,GAAIE,MAAO,GAAIN,MAAO,CAACwC,SAAU,YAApE,SACI,qBAAKvE,UAAU,YAAf,SACI,cAAC,EAAD,CAAgBW,aAAc3B,EAAQwF,KAAM5D,WAAY5B,EAAQyF,KAAOzF,EAAQyF,KAAK,GAAK,SAGjG,cAAC5C,EAAA,EAAKK,OAAN,CAAaE,OAAQ,GAAID,SAAU,EAAGE,MAAO,EAA7C,SACI,qBAAKrC,UAAU,UAAf,SACI,eAAC6B,EAAA,EAAD,CAAOC,QAAM,EAACC,MAAO,CAACC,OAAQ,QAA9B,UACI,cAACH,EAAA,EAAKI,IAAN,CAAUF,MAAO,CAACC,OAAQ,OAA1B,SACI,cAAC,EAAD,CAAWpC,aAAcT,EAAQU,eAtB5C,SAACV,GAClB,GAAI+E,EAAiBQ,OAAS,EAAG,CAC7B,IAAIC,EAAWT,EAAiBU,MAChCT,EAAUQ,GAGdR,EAAU,CAAChF,EAAO0F,OAAO,GAAGC,cAAgB3F,EAAO4F,MAAM,IAAhD,mBAAuDb,UAkBxC,cAACrC,EAAA,EAAKI,IAAN,CAAUF,MAAO,CAACC,OAAQ,OAA1B,SACI,cAAC,EAAD,CAAkBiB,gBAAiB9D,EAAQ+D,WAAYgB,MAE3D,cAACrC,EAAA,EAAKI,IAAN,CAAUF,MAAO,CAACC,OAAQ,OAA1B,SACI,cAAC,EAAD,CAAatC,KAAMV,EAAQyF,KAAOzF,EAAQyF,KAAK,GAAK,iBAMxE,cAAC5C,EAAA,EAAKI,IAAN,CAAUF,MAAO,CAACC,OAAQ,QAA1B,SACI,cAACH,EAAA,EAAKK,OAAN,CAAaG,MAAO,GAApB,SACI,qBAAKrC,UAAU,UAAf,SACI,cAAC,EAAD,CAAgBW,aAAc3B,EAAQwF,KAAM5D,WAAY5B,EAAQyF,KAAOzF,EAAQyF,KAAK,GAAK,iB,MC/CrHO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.ee0e6852.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst KEY = \"7588197497b88774cc6a4140c8a60d67\";\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5\",\n  params: {\n    appid: KEY,\n    units: 'metric'\n  },\n});\n","import { useState, useEffect } from 'react';\nimport openWeather from '../api/openWeather';\n\nconst useOpenWeather = (defaultLocation, path = 'london') => {\n    const [weather, setWeather] = useState([]);\n  \n    useEffect(() => {\n      search(defaultLocation);\n    }, [defaultLocation]);\n  \n    const search = async (term) => {\n      const response = await openWeather.get(path, {\n        params: {\n          q: term,\n        },\n      });\n  \n      setWeather(response.data);\n    };\n  \n    return [weather, search];\n  };\n\nexport default useOpenWeather;","import React, { useState } from 'react';\n\nconst SearchBar = ({ onFormSubmit, previousSearch }) => {\n  const [location, setLocation] = useState('');\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    onFormSubmit(location);\n    previousSearch(location);\n    setLocation('');\n  };\n\n  return (\n    <div className=\"overlay-segment\">\n      <div className=\"overlay-segment-border__bottom\">\n        <div className=\"search-bar\">\n          <form onSubmit={onSubmit}>\n            <div className=\"field\">\n              <input\n                type=\"text\"\n                value={location}\n                onChange={(event) => setLocation(event.target.value)}\n                placeholder=\"Another Location\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst SkeletonCard = () => {\n    return (\n        <div className=\"ui raised card\">\n            <div className=\"content\">\n                <div className=\"header skeleton skeleton-header\"></div>\n                <div className=\"description\">\n                    <p className=\"skeleton skeleton-text\"></p>\n                    <p className=\"skeleton skeleton-text\"></p>\n                    <p className=\"skeleton skeleton-text\"></p>\n                </div>\n            </div>\n            <div className=\"extra content\">\n                <div className=\"right floated author\">\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SkeletonCard;","import React from \"react\";\nimport { Grid } from 'semantic-ui-react';\n\nimport SkeletonCard from './SkeletonCard';\n\nconst LocationDetail = ({ locationData, currentDay }) => {\n    if (locationData) {\n        const weekDay = new Date(currentDay.dt * 1000).toLocaleString(\"en-gb\", {\n            weekday: \"long\"\n        });\n        let date = dateList(currentDay.dt_txt);\n\n        return (\n            <Grid padded style={{height: '100%'}}>\n                <Grid.Row style={{height: '100%'}}>\n                    <Grid.Column computer={4} mobile={16} width={4} style={{marginTop: '4%'}}>\n                        <h1 className=\"temp\">{Math.round(Number(currentDay.main.temp))}°C</h1>\n                    </Grid.Column>\n                    <Grid.Column computer={5} mobile={16} width={5} style={{marginTop: '4%'}}>\n                        <div className=\"location\"><p>{locationData.name}, {locationData.country}</p></div>\n                        <div className=\"header\">{weekDay}, {date}</div>\n                    </Grid.Column>\n                    <Grid.Column computer={4} mobile={16} width={4}>\n                        <img src={`http://openweathermap.org/img/wn/${currentDay.weather[0].icon}@2x.png`} alt={'dsajnk'}/>\n                        <p>{currentDay.weather[0].main}</p>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            // <div className=\"ui raised card\">\n            //     <div className=\"header\">\n            //         <h1>{weekDay}</h1>\n            //             <p class=\"category\">{date}</p>\n            //         <h1 className=\"header\">{Math.round(Number(currentDay.main.temp))}°C</h1>\n            //         <img src={`http://openweathermap.org/img/wn/${currentDay.weather[0].icon}@2x.png`} alt={'dsajnk'}/>\n            //         <div className=\"meta\">\n            //             <p>{currentDay.weather[0].main}</p>\n            //         </div>\n            //         <div className=\"header\">{locationData.name}, {locationData.country}</div>\n            //     </div>\n            //     <div className=\"extra content\">\n            //         <div className=\"right floated author\">\n            //         </div>\n            //     </div>\n            // </div>\n        );\n    } else {\n        return <SkeletonCard />;\n    }\n\n    function dateList(date) {\n        let months   = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n        let myarr1 = date.split(\" \");\n        date = myarr1[0];\n        let myArr2 = date.split(\"-\");\n        let year = myArr2[0]\n        let month = months[Number(myArr2[1])];\n        let d = myArr2[2];\n        return d + ' ' + month + ' ' + year; \n        return [d, month, year];\n    }\n}\n\nexport default LocationDetail;","import React from \"react\";\nimport reactDom from \"react-dom\";\n\nconst PreviousSearches = ({ onLocationClick, searchList }) => {\n    console.log(searchList);\n    const renderedList = searchList.map(searchTerm => {\n        return (\n            <p  className=\"overlay-text pointer\" \n                key={searchTerm} \n                onClick={() => onLocationClick(searchTerm)}>\n                    {searchTerm}\n                    <br/>\n            </p>\n        );\n      });\n    return (\n        <div className=\"overlay-segment\">\n            <div className=\"overlay-segment-border__bottom\">\n                {renderedList}\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default PreviousSearches;","import React from \"react\";\n\nimport SkeletonCard from './SkeletonCard';\n\nconst WeatherData = ({data}) => {\n    if (data) {\n        return (\n            <div className=\"overlay-segment\">\n                <div className=\"overlay-segment-border__bottom\">\n                    <div className=\"overlay-text overlay-header\">Weather Details</div>\n                    <div class=\"overlay-data\"><p className=\"overlay-text\">Cloudy:</p> <p className=\"overlay-value\">{data.clouds.all}%</p></div>\n                    <div class=\"overlay-data\"><p className=\"overlay-text\">Humidity:</p> <p className=\"overlay-value\">{data.main.humidity}%</p></div>\n                    <div class=\"overlay-data\"><p className=\"overlay-text\">Wind:</p> <p className=\"overlay-value\">{(Math.round((data.wind.speed * 3.6) * 10)) / 10}km/h</p></div>\n                    <div class=\"overlay-data\"><p className=\"overlay-text\">Rain:</p> <p className=\"overlay-value\">{data.rain ? data.rain['3h'] : 0}mm</p></div>\n                </div>\n            </div>\n        );\n    } else {\n        return <SkeletonCard />;\n    }\n}\n\nexport default WeatherData;","export default __webpack_public_path__ + \"static/media/balloon.7829871c.jpeg\";","import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport useOpenWeather from '../hooks/useOpenWeather';\nimport SearchBar from './SearchBar';\nimport LocationDetail from './LocationDetali';\nimport PreviousSearches from './PreviousSearches';\nimport WeatherData from './WeatherData';\n\nimport balloon from '../img/balloon.jpeg';\n\nconst App = () => {\n    const [weather, search] = useOpenWeather('london', '/forecast');\n    const [previousSearches, addSearch] = useState([]);\n\n    const pushToSearch = (search) => {\n        if (previousSearches.length > 3) {\n            let newArray = previousSearches.pop();\n            addSearch(newArray);\n        }\n        \n        addSearch([search.charAt(0).toUpperCase() + search.slice(1), ...previousSearches]);\n    }\n\n    return (\n        <div className=\"background\" style={{backgroundImage: \"url('\" + balloon + \"')\"}}>\n            <Grid padded style={{height: '100vh', overflowY: 'hidden'}}>\n                <Grid.Row style={{height: '100%', overflowY: 'scroll'}}>\n                    <Grid.Column mobile={16} computer={10} width={10} style={{position: 'relative'}}>\n                        <div className=\"pane-view\">\n                            <LocationDetail locationData={weather.city} currentDay={weather.list ? weather.list[0] : ''}/>\n                        </div>\n                    </Grid.Column>\n                    <Grid.Column mobile={16} computer={6} width={6}>\n                        <div className=\"overlay\">\n                            <Grid  padded style={{height: '100%'}}>\n                                <Grid.Row style={{height: '10%'}}>\n                                    <SearchBar onFormSubmit={search} previousSearch={pushToSearch}/>\n                                </Grid.Row>\n                                <Grid.Row style={{height: '40%'}}>\n                                    <PreviousSearches onLocationClick={search} searchList={previousSearches}/>\n                                </Grid.Row>\n                                <Grid.Row style={{height: '50%'}}>\n                                    <WeatherData data={weather.list ? weather.list[0] : ''} />\n                                </Grid.Row>\n                            </Grid>\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{height: '100%'}}>\n                    <Grid.Column width={16} >\n                        <div className=\"overlay\">\n                            <LocationDetail locationData={weather.city} currentDay={weather.list ? weather.list[0] : ''}/>\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n      </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}